# Iterates the unidirectional rnnlm segmenter: Tuur, Kata, Stalin
import argparse
import subprocess
import sys
import os

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Given a text file, iterates RNNLM-word-segmentation.')
    parser.add_argument('text', metavar='text', type=str,
                   help='The input text')
    parser.add_argument('-threshold', metavar='-threshold', type=float,default = .2,
                   help='The prob threshold (default=0.2)')
    parser.add_argument('-rnnlm', metavar='rnnlm', type=str, default='./rnnlm',
                   help='file path to the rnnlm program (default=./rnnlm)')
    parser.add_argument('-it', metavar='it', type=int, default=10,
                   help='Number of iterations (default=10)')

    args = parser.parse_args()  
    sys.stderr.write('=== RNNLM Segmentation:\n')    
    sys.stderr.write('--- ITERATION 1:\n')
    subprocess.call(['python2.7','segment-lm.py',args.text,'-threshold',str(args.threshold), '-output','iterations/seg-1.txt'])

    
    if not(os.path.exists('iterations/')):
        os.makedirs('iterations/')

    for i in range(1,args.it):
        sys.stderr.write('--- ITERATION '+str(i+1)+':\n')
        inp = 'iterations/seg-'+str(i)+'.txt'
        outp = 'iterations/seg-'+str(i+1)+'.txt'
        subprocess.call(['python2.7','uni-rnnlm-segment.py',inp,'-threshold',str(args.threshold),'-output', outp])
